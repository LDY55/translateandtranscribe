#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
"""

import pytest


def test_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    try:
        import torch

        print(f"‚úÖ PyTorch: {torch.__version__}")
        print(f"üì± CUDA –¥–æ—Å—Ç—É–ø–Ω–∞: {torch.cuda.is_available()}")
    except ImportError:
        pytest.skip("PyTorch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    try:
        import transformers

        print(f"‚úÖ Transformers: {transformers.__version__}")
    except ImportError:
        pytest.skip("Transformers –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    try:
        from pydub import AudioSegment

        print("‚úÖ PyDub –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError:
        pytest.skip("PyDub –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")


def test_transcription_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏"""
    print("\nüé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏...")

    test_dependencies()

    try:
        from transcription_simple import TranscriptionProcessor

        processor = TranscriptionProcessor()
        info = processor.get_model_info()
        print(f"üìä –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {info['model_loaded']}")
        print(f"üñ•Ô∏è –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {info['device']}")

        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    test_transcription_simple()
